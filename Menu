import sqlite3

# Função para conectar ao banco de dados
def conectar():
    conn = sqlite3.connect('registros.db')
    return conn

# Função para criar as tabelas se não existirem
def criar_tabelas(conn):
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS autores (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            nome TEXT NOT NULL
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS livros (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            titulo TEXT NOT NULL,
            id_autor INTEGER,
            FOREIGN KEY (id_autor) REFERENCES autores(id)
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS pedidos (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            id_livro INTEGER,
            quantidade INTEGER NOT NULL,
            FOREIGN KEY (id_livro) REFERENCES livros(id)
        )
    ''')
    conn.commit()

# Função para exibir a splash screen
def splash_screen():
    print("================================")
    print("         Meu Programa           ")
    print("      Criado por: Seu Nome     ")
    print("================================")
    print()

# Função para contar registros em uma tabela
def contar_registros(conn, tabela):
    cursor = conn.cursor()
    cursor.execute(f'SELECT COUNT(1) FROM {tabela}')
    return cursor.fetchone()[0]

# Função para exibir o menu principal
def exibir_menu():
    print("\nMenu Principal:")
    print("1. Relatórios")
    print("2. Inserir registros")
    print("3. Remover registros")
    print("4. Atualizar registros")
    print("5. Sair")

# Funções de relatório
def relatorios(conn):
    print("\nRelatórios:")
    print("1. Contagem de Autores")
    print("2. Livros por Autor")
    opcao = input("Escolha uma opção: ")
    cursor = conn.cursor()
    
    if opcao == '1':
        total_autores = contar_registros(conn, 'autores')
        print(f"Total de autores: {total_autores}")
    
    elif opcao == '2':
        cursor.execute('''
            SELECT a.nome, COUNT(l.id) FROM autores a
            LEFT JOIN livros l ON a.id = l.id_autor
            GROUP BY a.nome
        ''')
        for row in cursor.fetchall():
            print(f"Autor: {row[0]}, Total de Livros: {row[1]}")
    
    else:
        print("Opção inválida.")

# Função para inserir registros
def inserir_registro(conn):
    while True:
        print("\nInserir Registro:")
        print("1. Autores")
        print("2. Livros")
        opcao = input("Escolha uma opção: ")
        cursor = conn.cursor()

        if opcao == '1':
            nome = input("Digite o nome do autor: ")
            cursor.execute('INSERT INTO autores (nome) VALUES (?)', (nome,))
        
        elif opcao == '2':
            titulo = input("Digite o título do livro: ")
            id_autor = int(input("Digite o ID do autor: "))
            cursor.execute('INSERT INTO livros (titulo, id_autor) VALUES (?, ?)', (titulo, id_autor))
        
        else:
            print("Opção inválida.")
            continue

        conn.commit()
        print("Registro inserido com sucesso.")
        
        continuar = input("Deseja inserir mais registros? (s/n): ")
        if continuar.lower() != 's':
            break

# Função para remover registros
def remover_registro(conn):
    while True:
        print("\nRemover Registro:")
        print("1. Autores")
        print("2. Livros")
        opcao = input("Escolha uma opção: ")
        cursor = conn.cursor()

        if opcao == '1':
            cursor.execute('SELECT id, nome FROM autores')
            autores = cursor.fetchall()
            for autor in autores:
                print(f"{autor[0]}. {autor[1]}")
            id_autor = int(input("Digite o ID do autor a ser removido: "))
            cursor.execute('DELETE FROM autores WHERE id = ?', (id_autor,))
        
        elif opcao == '2':
            cursor.execute('SELECT id, titulo FROM livros')
            livros = cursor.fetchall()
            for livro in livros:
                print(f"{livro[0]}. {livro[1]}")
            id_livro = int(input("Digite o ID do livro a ser removido: "))
            cursor.execute('DELETE FROM livros WHERE id = ?', (id_livro,))
        
        else:
            print("Opção inválida.")
            continue

        conn.commit()
        print("Registro removido com sucesso.")
        
        continuar = input("Deseja remover mais registros? (s/n): ")
        if continuar.lower() != 's':
            break

# Função para atualizar registros
def atualizar_registro(conn):
    while True:
        print("\nAtualizar Registro:")
        print("1. Autores")
        print("2. Livros")
        opcao = input("Escolha uma opção: ")
        cursor = conn.cursor()

        if opcao == '1':
            cursor.execute('SELECT id, nome FROM autores')
            autores = cursor.fetchall()
            for autor in autores:
                print(f"{autor[0]}. {autor[1]}")
            id_autor = int(input("Digite o ID do autor a ser atualizado: "))
            novo_nome = input("Digite o novo nome do autor: ")
            cursor.execute('UPDATE autores SET nome = ? WHERE id = ?', (novo_nome, id_autor))
        
        elif opcao == '2':
            cursor.execute('SELECT id, titulo FROM livros')
            livros = cursor.fetchall()
            for livro in livros:
                print(f"{livro[0]}. {livro[1]}")
            id_livro = int(input("Digite o ID do livro a ser atualizado: "))
            novo_titulo = input("Digite o novo título do livro: ")
            cursor.execute('UPDATE livros SET titulo = ? WHERE id = ?', (novo_titulo, id_livro))
        
        else:
            print("Opção inválida.")
            continue

        conn.commit()
        print("Registro atualizado com sucesso.")
        
        continuar = input("Deseja atualizar mais registros? (s/n): ")
        if continuar.lower() != 's':
            break

# Função principal
def main():
    splash_screen()
    conn = conectar()
    criar_tabelas(conn)

    total_autores = contar_registros(conn, 'autores')
    total_livros = contar_registros(conn, 'livros')
    print(f"Número de autores: {total_autores}")
    print(f"Número de livros: {total_livros}")

    while True:
        exibir_menu()
        opcao = input("Escolha uma opção: ")
        
        if opcao == '1':
            relatorios(conn)
        elif opcao == '2':
            inserir_registro(conn)
        elif opcao == '3':
            remover_registro(conn)
        elif opcao == '4':
            atualizar_registro(conn)
        elif opcao == '5':
            print("Saindo do programa...")
            break
        else:
            print("Opção inválida.")

    conn.close()

if __name__ == "__main__":
    main()
