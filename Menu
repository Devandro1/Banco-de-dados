import mysql.connector

Conectar ao banco de dados
db = mysql.connector.connect(
host="localhost",
user="root", # Troque para seu usuário
password="sua_senha", # Troque para sua senha
database="SistemaDeVendas"
)

cursor = db.cursor()

Função para contar registros
def contar_registros():
tabelas = ['Autores', 'Livros', 'Pedidos']
for tabela in tabelas:
cursor.execute(f"SELECT COUNT(1) FROM {tabela}")
resultado = cursor.fetchone()
print(f"Total de registros em {tabela}: {resultado[0]}")

Função para inserir registros
def inserir_registro():
entidade = input("Escolha a entidade (Autores, Livros, Pedidos): ").strip()
if entidade.lower() == "autores":
nome_autor = input("Informe o nome do autor: ")
cursor.execute("INSERT INTO Autores (nome_autor) VALUES (%s)", (nome_autor,))
db.commit()
print("Autor inserido com sucesso.")
elif entidade.lower() == "livros":
titulo_livro = input("Informe o título do livro: ")
id_autor = input("Informe o ID do autor: ")
cursor.execute("INSERT INTO Livros (titulo_livro, id_autor) VALUES (%s, %s)", (titulo_livro, id_autor))
db.commit()
print("Livro inserido com sucesso.")
elif entidade.lower() == "pedidos":
id_livro = input("Informe o ID do livro: ")
quantidade = input("Informe a quantidade: ")
data_pedido = input("Informe a data do pedido (YYYY-MM-DD): ")
cursor.execute("INSERT INTO Pedidos (id_livro, quantidade, data_pedido) VALUES (%s, %s, %s)", (id_livro, quantidade, data_pedido))
db.commit()
print("Pedido inserido com sucesso.")

Função para remover registros
def remover_registro():
entidade = input("Escolha a entidade (Autores, Livros, Pedidos): ").strip()
id_registro = input(f"Informe o ID do {entidade} que deseja remover: ")
cursor.execute(f"DELETE FROM {entidade} WHERE id_{entidade.lower()} = %s", (id_registro,))
db.commit()
print(f"{entidade} removido com sucesso.")

Função para atualizar registros
def atualizar_registro():
entidade = input("Escolha a entidade (Autores, Livros, Pedidos): ").strip()
id_registro = input(f"Informe o ID do {entidade} que deseja atualizar: ")
novo_valor = input("Informe o novo valor: ")
campo = input(f"Informe o campo que deseja atualizar em {entidade}: ")
cursor.execute(f"UPDATE {entidade} SET {campo} = %s WHERE id_{entidade.lower()} = %s", (novo_valor, id_registro))
db.commit()
print(f"{entidade} atualizado com sucesso.")

Função para gerar relatórios
def gerar_relatorio():
print("Relatório de pedidos agrupados por livros:")
cursor.execute("""
SELECT Livros.titulo_livro, SUM(Pedidos.quantidade) AS total_vendido
FROM Pedidos
INNER JOIN Livros ON Pedidos.id_livro = Livros.id_livro
GROUP BY Livros.titulo_livro
""")
resultados = cursor.fetchall()
for row in resultados:
print(f"Livro: {row[0]} - Total Vendido: {row[1]}")

Menu principal
def menu():
while True:
print("\nSistema de Gerenciamento de Livraria")
print("1. Contar Registros")
print("2. Inserir Registro")
print("3. Remover Registro")
print("4. Atualizar Registro")
print("5. Gerar Relatório")
print("6. Sair")
escolha = input("Escolha uma opção: ")

    if escolha == "1":
        contar_registros()
    elif escolha == "2":
        inserir_registro()
    elif escolha == "3":
        remover_registro()
    elif escolha == "4":
        atualizar_registro()
    elif escolha == "5":
        gerar_relatorio()
    elif escolha == "6":
        print("Saindo...")
        break
    else:
        print("Opção inválida, tente novamente.")
Executa o menu
menu()

Fechar a conexão ao banco de dados
cursor.close()
db.close()
